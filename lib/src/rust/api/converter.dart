// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import '../frb_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

Future<String> convertImage(
        {required String imagePath,
        required ConvertParameters convertParameters}) =>
    RustLib.instance.api.crateApiConverterConvertImage(
        imagePath: imagePath, convertParameters: convertParameters);

enum ConvertError {
  ioError,
  imageError,
  encoderError,
  webPConfigError,
  webPEncodingError,
  ;
}

class ConvertParameters {
  const ConvertParameters({
    required this.quality,
    required this.outputDirectory,
    required this.lossless,
    required this.method,
  });
  final double quality;
  final String outputDirectory;
  final bool lossless;
  final int method;

  @override
  int get hashCode =>
      quality.hashCode ^
      outputDirectory.hashCode ^
      lossless.hashCode ^
      method.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ConvertParameters &&
          runtimeType == other.runtimeType &&
          quality == other.quality &&
          outputDirectory == other.outputDirectory &&
          lossless == other.lossless &&
          method == other.method;
}
